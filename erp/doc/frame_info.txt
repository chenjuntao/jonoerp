编码：所有文件编码统一设置为gb2312；

文件命名规则：
┣命名使用英文，
┣单词统一小写，(方便Linux下操作）
┗单词尽量不缩写，太长的情况下可以缩写（便于他人阅读和理解）

主菜单与文件夹对应关系：
┣前台数据库查询←→bussinessquery
┣餐厅管理←→restaurant
┣物流中心管理←→logisticscenter
┣中央工厂管理←→centralfactory
┣总部功能管理←→headquarters
┣供应商管理←→supplier
┣外部订货方管理←→outerorderparty
┗系统服务←→setting

┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓
┃ 标识符类型 ┃	                 命名规则	                  ┃            例子              	┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃            ┃ 一个唯一包名的前缀总是全部小写的ASCII字母并且    ┃                        	    ┃
┃			  ┃是一个顶级域名，通常是com，edu，gov，mil，net，   ┃com.sun.eng             	    ┃
┃			  ┃org，或1981年ISO3166标准所指定的标识国家的英文    ┃com.apple.quicktime.v2 	  	    ┃
┃	包 		  ┃双字符代码。包名的后续部分根据不同机构各自内部    ┃edu.cmu.cs.bovik.cheese   	    ┃
┃	(Packages)┃的命名规范而不尽相同。这类命名规范可能以特定目    ┃                      	        ┃
┃			  ┃录名的组成来区分部门(department)，项目(project)， ┃                        	    ┃
┃	 		  ┃机器(machine)，或注册名(login names)。            ┃                        	    ┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃            ┃命名规则：类名是个一名词，采用大小写混合的方式，每┃                         	    ┃
┃	类		  ┃个单词的首字母大写。尽量使你的类名简洁而富于描述。┃class Raster;            	    ┃
┃	(Classes) ┃使用完整单词，避免缩写词(除非该缩写词被更广泛使用,┃class ImageSprite;       	    ┃
┃			  ┃像URL，HTML)                                      ┃                         	    ┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃	接口	  ┃命名规则：大小写规则与类名相似                    ┃interface RasterDelegate; 	    ┃
┃(Interfaces)┃                                                  ┃interface Storing;        	    ┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃   方法     ┃方法名是一个动词，采用大小写混合的方式，第一个单词┃run(); 					 	    ┃
┃(Methods)	  ┃的首字母小写，其后单词的首字母大写。              ┃getBackground();		 	    ┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃            ┃除了变量名外，所有实例，包括类，类常量，均采用大小┃						 	    ┃
┃			  ┃写混合的方式，第一个单词的首字母小写，其后单词的首┃						  	    ┃
┃	变量	  ┃字母大写。变量名不应以下划线或美元符号开头，尽管这┃						  	    ┃
┃(Variables) ┃在语法上是允许的。								  ┃char c;					  	    ┃
┃			  ┃变量名应简短且富于描述。变量名的选用应该易于记忆，┃int i;						    ┃
┃			  ┃即，能够指出其用途。尽量避免单个字符的变量名，除非┃float myWidth;			  	    ┃
┃			  ┃是一次性的临时变量。临时变量通常被取名为i，j，k，m┃						  	    ┃
┃			  ┃和n，它们一般用于整型；c，d，e，它们一般用于字符型┃						  	    ┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃ 实例变量   ┃大小写规则和变量名相似，除了前面需要一个下划线    ┃ int _employeeId;		  	    ┃
┃(Instance   ┃ 												  ┃ String _name;			  	    ┃
┃Variables)  ┃ 												  ┃ Customer _customer;	  	    ┃
┠━━━━━━╋━━━━━━━━━━━━━━━━━━━━━━━━━╋━━━━━━━━━━━━━━━━┫
┃	常量	  ┃类常量和ANSI常量的声明，应该全部大写，单词间用下划┃static final int MIN_WIDTH = 4; ┃
┃(Constants) ┃线隔开。(尽量避免ANSI常量，容易引起错误) 		  ┃static final int GET_CPU_A = 1; ┃
┗━━━━━━┻━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━━━━━━┛
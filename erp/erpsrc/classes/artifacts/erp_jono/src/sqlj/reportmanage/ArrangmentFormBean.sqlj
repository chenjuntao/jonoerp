package logic.reportmanage;

import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import java.util.Map;
import java.util.HashMap;

import logic.NoConnection;
import logic.pool.ConnectionPool;

import org.apache.log4j.Logger;

import sqlj.runtime.ref.DefaultContext;

import com.tanry.business.form.FormConstant;
import com.tanry.framework.util.SqlDateUtil;
import com.tanry.framework.util.TextUtil;
import com.tanry.framework.acl.NoPrivilegeException;

public class ArrangmentFormBean extends ConnectionPool {

	public static Logger log = Logger.getLogger(ArrangmentFormBean.class);
	
	#sql private iterator HeaderIter(
			String form_id, 
			String form_ref_id, 
			String form_maker_id, 
			String form_maker,
			Date form_time, 
			String auditor_id, 
			String auditor, 
			Date audit_time, 
			String form_note,
			String status);
	
	public Map getColmunType(){
		Map map  = new HashMap();
		map.put("form_id", "String");
		map.put("form_ref_id", "String");
		map.put("form_maker_id", "String");
		map.put("form_maker", "String");
		map.put("form_time", "Date");
		map.put("auditor_id", "String");
		map.put("auditor", "String");
		map.put("audit_time", "Date");
		map.put("form_note", "String");
		map.put("status", "String");
		return map;
	}
	
	public Map getColmunPrefix(){
		Map map  = new HashMap();
		map.put("form_id", "h");
		map.put("form_ref_id", "h");
		map.put("form_maker_id", "h");
		map.put("form_maker", "h");
		map.put("form_time", "h");
		map.put("auditor_id", "h");
		map.put("auditor", "h");
		map.put("audit_time", "h");
		map.put("form_note", "h");
		map.put("status", "s");
		return map;
	}
	
	
	public int count(String queryStr, String sortStr)
			throws NoPrivilegeException,SQLException,NoConnection {
		
		DefaultContext myCtx = getDefaultContext();
		int total = 0;
		#sql [myCtx] {
			SELECT
			    count(*) into :total
			FROM
			:{Com_("D_T1_ARRENGMENT_HEADER")} h
			LEFT JOIN
			:{Com_("D_T0_FORM_STATUS")} s
			ON
			    s.FORM_ID = h.FORM_ID
			AND s.IS_CURRENT = 1
			WHERE
			 1 = 1
             :{queryStr :: ''}
		};
		closeDefaultContext(myCtx);
		return total;
	}
	
	
	public List<Map> query(int startRow, int endRow,String queryStr,  String sortStr)  
			throws NoPrivilegeException,SQLException,NoConnection {
		
		DefaultContext myCtx = getDefaultContext();
		HeaderIter headerIter = null;
		#sql [myCtx] headerIter = {
			SELECT
			    *
			    FROM
			        (
			            SELECT
			                t.*,
			                ROWNUM rowNumber
			            FROM 
			                (
			                    SELECT
			                        h.*, s.STATUS 
			                    FROM
			                    :{Com_("D_T1_ARRENGMENT_HEADER")} h
			            		LEFT JOIN
			            		:{Com_("D_T0_FORM_STATUS")} s
			        			ON
			        			    s.FORM_ID = h.FORM_ID
			        			AND s.IS_CURRENT = 1
			                    WHERE
			                    	1 = 1
				                    :{queryStr :: ''}
			            		) t
			            WHERE
			                ROWNUM < :endRow)
			    WHERE
			        rowNumber >= :startRow};
		List<Map> headerLst = processIter(headerIter);
		headerIter.close();
		closeDefaultContext(myCtx);
		return headerLst;
	}
	

	private List<Map> processIter(HeaderIter headerIter) 
			throws SQLException {
		List<Map> headerLst = new ArrayList<Map>();
		
		while(headerIter.next()) {
			Map header = new HashMap();
			header.put("form_id", headerIter.form_id());
			header.put("form_ref_id", headerIter.form_ref_id());
			header.put("form_maker_id", headerIter.form_maker_id());
			header.put("form_maker", headerIter.form_maker());
			header.put("form_time", headerIter.form_time());
			header.put("auditor_id", headerIter.auditor_id());
			header.put("auditor", headerIter.auditor());
			header.put("audit_time", headerIter.audit_time());
			header.put("form_note", headerIter.form_note());
			header.put("status", headerIter.status());
			headerLst.add(header);
		}
		return headerLst;
	}
}
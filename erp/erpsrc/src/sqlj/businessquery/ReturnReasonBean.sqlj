 
package logic.businessquery;

import sqlj.runtime.*;
import sqlj.runtime.ref.*;
import java.sql.*;
import oracle.sql.*;
import oracle.sqlj.runtime.*;
import oracle.jdbc.driver.*;
import java.util.*;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import logic.pool.ConnectionPool;
import logic.*;
import com.tanry.framework.acl.*;
import pojo.businessquery.ReturnReason;

public class ReturnReasonBean extends ConnectionPool
{
	#sql public static iterator ReturnReasonIterator(
			float returnAmount,
			float returnAmt,
			String returnWhy,
			String shopC,
			String shopN);
	
	#sql public static iterator ReturnReasonSumIterator(float returnAmount,float returnAmt);
	
	public ReturnReasonBean()
	{
	}
	
	public ReturnReason returnReasonSum(String startDate,String endDate,String shopC)
			throws NoPrivilegeException,SQLException,NoConnection	{
		
		ReturnReason returnReason = new ReturnReason();
		DefaultContext myCtx = getDefaultContext();
		ReturnReasonSumIterator returnReasonSumIterator = null;
		if (myCtx != null)
		{
			#sql [myCtx] returnReasonSumIterator = {
			SELECT
				   CASE
				        WHEN SUM(returnAmount) IS NULL
				        THEN 0
				        ELSE SUM(returnAmount)
				    END returnAmount,
				    CASE
				        WHEN SUM(returnAmt) IS NULL
				        THEN 0
				        ELSE SUM(returnAmt)
				    END returnAmt
				    FROM
				        (
				        	SELECT
							    bs.sRetSendRemark returnWhy,
							    SUM( bs.nQty)     returnAmount,
							    SUM( bs.nAmt)     returnAmt,
							    b.CBRANCH_C       shopC,
							    b.CBRANCH_N       shopN
							FROM
							    :{Com_("d_t_food_bill")} b
							LEFT JOIN
							    :{Com_("d_t_food_bills")} bs
							ON
							    b.cBill_C = bs.cBill_C
							WHERE
							    b.CBRANCH_C LIKE :shopC
							AND bs.eRetSendFlag = '退品'
							AND bs.eSuitFlag <> '套餐子项'
							AND DBUSINESS >= TO_Date( :startDate, 'yyyy-MM-dd')
							AND DBUSINESS <= TO_Date( :endDate, 'yyyy-MM-dd')
							GROUP BY
							    bs.sRetSendRemark,
							    b.CBRANCH_C ,
							    b.CBRANCH_N
							ORDER BY
							    SUM( bs.nQty) DESC
						)t
				                
			};
			
			while(returnReasonSumIterator.next()) {
				returnReason.returnAmount = returnReasonSumIterator.returnAmount();
				returnReason.returnAmt = returnReasonSumIterator.returnAmt();
			}
			returnReasonSumIterator.close();
		}
		else
		{
			throw new NoConnection();
		}
		closeDefaultContext(myCtx);
		return returnReason;
	}
	
	
	public List<ReturnReason> returnReason(String startDate,String endDate,String shopC)
			throws NoPrivilegeException,SQLException,NoConnection	{
		
		List<ReturnReason> result = new ArrayList<ReturnReason>();
		DefaultContext myCtx = getDefaultContext();
		ReturnReasonIterator returnReasonIterator = null;
		if (myCtx != null)
		{
			#sql [myCtx] returnReasonIterator = {
			SELECT
				    bs.sRetSendRemark returnWhy,
				    SUM( bs.nQty)     returnAmount,
				    SUM( bs.nAmt)     returnAmt,
				    b.CBRANCH_C       shopC,
				    b.CBRANCH_N       shopN
				FROM
				    :{Com_("d_t_food_bill")} b
				LEFT JOIN
				    :{Com_("d_t_food_bills")} bs
				ON
				    b.cBill_C = bs.cBill_C
				WHERE
				    b.CBRANCH_C LIKE :shopC
				AND bs.eRetSendFlag = '退品'
				AND bs.eSuitFlag <> '套餐子项'
				AND DBUSINESS >= TO_Date( :startDate, 'yyyy-MM-dd')
				AND DBUSINESS <= TO_Date( :endDate, 'yyyy-MM-dd')
				GROUP BY
				    bs.sRetSendRemark,
				    b.CBRANCH_C ,
				    b.CBRANCH_N
				ORDER BY
				    SUM( bs.nQty) DESC
			};
			
			while(returnReasonIterator.next()) {
				ReturnReason returnReason = new ReturnReason();
				returnReason.returnAmount = returnReasonIterator.returnAmount();
				returnReason.returnAmt = returnReasonIterator.returnAmt();
				returnReason.returnWhy = returnReasonIterator.returnWhy();
				returnReason.shopC = returnReasonIterator.shopC();
				returnReason.shopN = returnReasonIterator.shopN();
				result.add(returnReason);
			}
			returnReasonIterator.close();
		}
		else
		{
			throw new NoConnection();
		}
		closeDefaultContext(myCtx);
		return result;
	}
	
}
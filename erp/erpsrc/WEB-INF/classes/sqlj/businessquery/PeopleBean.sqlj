/**
 * read createman, settleman, and others list
 * 
 * created by cjt 2014.6.25
 * 
 * modified by lyz 2015.6.2
 */

package logic.businessquery;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import logic.NoConnection;
import logic.pool.ConnectionPool;
import sqlj.runtime.ref.DefaultContext;

import com.tanry.framework.acl.NoPrivilegeException;
import com.tanry.framework.util.Cn2Spell;
import com.tanry.framework.util.TextUtil;

public class PeopleBean extends ConnectionPool {
	
	#sql private iterator ManIterator(String code, String code_name, String name);
	
	/**
	 * 根据字段查询相应的人员信息，按拼音排序.
	 */
	public List<Map> listMan(String codeCol, String nameCol) 
			throws NoPrivilegeException,SQLException,NoConnection {
		DefaultContext myCtx = getDefaultContext();
		ManIterator manIterator = null;
		//全角的数字/字母/标点符号转半角，比如中文括号转英文括号
		#sql [myCtx] manIterator = {
			SELECT
			    trim(code) as code,
			    trim(name) as name,
			    '[' || trim(code) || ']' || trim(name) code_name
			FROM
			    (
			        SELECT DISTINCT
			        	to_single_byte(:{codeCol :: cCreateMan}) code,
			        	to_single_byte(:{nameCol :: cCreateMan}) name
			        FROM
			            :{Com_("d_t_food_bill")}
			        WHERE
			            ascii(:{nameCol :: cCreateMan}) <> 0 ) p
			ORDER BY
			    trim(name)
		};
		
		List<Map> manLst = new ArrayList<Map>();
		while(manIterator.next()) {
			Map<String, String> people = new HashMap<String, String>();
			people.put("peopleC", manIterator.code());
			people.put("peopleName", manIterator.code_name());
			String name = manIterator.name();
			if (TextUtil.isEmpty(name)) {
				continue;
			}
			people.put("peoplePinyin", Cn2Spell.converterToFirstSpell(name));
			manLst.add(people);
		}
		manIterator.close();
		closeDefaultContext(myCtx);
		
		return manLst;
	}
}

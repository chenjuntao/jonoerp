/**
 *by wuqing
 *first created on 2014.6.12
 *last edited on 2014.7.7
 *
 *edited by cjt on 2014.7.28
 */

package logic.restapi;

import pojo.form.Weight;
import sqlj.runtime.ref.*;
import java.sql.*;
import java.util.*;
import java.text.ParseException;
import logic.pool.ConnectionPool;
import logic.*;
import com.tanry.framework.acl.*;
import java.sql.Date;
import pojo.form.Store;

public class WeightBean extends ConnectionPool{
	private String comId = "jono";
	#sql public static iterator WeightIter(
			String myid,
			String num, 
			String pic,
			Integer isok
		);
	#sql public static iterator StoreIter(
    			String storeid,
    			String status
    	);
	
	public int saveEntity(String myid,String num,String pic) throws NoPrivilegeException, SQLException, NoConnection {
		DefaultContext myCtx = getComContext(comId);

		//String id = map.get("id").toString();
		//String num = map.get("num").toString();
		//String pic = map.get("pic").toString();

		#sql [myCtx] {
			INSERT INTO jono.weight
				(myid, num, pic)
			VALUES 
				(:myid, :num, :pic)
			};
		closeDefaultContext(myCtx);
		
		return 1;
	}


	public int saveStore(String id,String num,String pic) throws NoPrivilegeException, SQLException, NoConnection {
    		DefaultContext myCtx = getComContext(comId);

    		//String id = map.get("id").toString();
    		//String num = map.get("num").toString();
    		//String pic = map.get("pic").toString();
    		#sql [myCtx] {
    			INSERT INTO jono.d_store
    				(id, weight, pic)
    			VALUES
    				(:id, :num, :pic)
    			};
    		closeDefaultContext(myCtx);
    		return 1;
    	}

	       public List<Weight> selectTest()
    			throws NoPrivilegeException,SQLException,NoConnection {
    		DefaultContext myCtx = getDefaultContext();
    		WeightIter weightIter = null;
    		#sql [myCtx] weightIter = {

    			        SELECT
    			           h.myid,
    			           h.num,
    			           h.pic,
    			           h.isok
    			        FROM
    			       jono.weight h
    		};
    		List<Weight> weightList = processIter(weightIter);
    		weightIter.close();
    		closeDefaultContext(myCtx);
    		return weightList;
    	}

    	private List<Weight> processIter(WeightIter weightIter)
        			throws SQLException {
        		List<Weight> weightList = new ArrayList<Weight>();
        		while(weightIter.next()) {
        			Weight weight = new Weight();
        			weight.setMyid(weightIter.myid());
        	        weight.setNum(weightIter.num());
        	        weight.setPic(weightIter.pic());
        	        weight.setIsok(weightIter.isok());
        		    weightList.add(weight);
        		}
        		return weightList;
        	}


        	 public List<Weight> selectTests()
                			throws NoPrivilegeException,SQLException,NoConnection {
                		DefaultContext myCtx = getDefaultContext();
                		WeightIter weightIter = null;
                		#sql [myCtx] weightIter = {
                			        SELECT
                			           h.myid,
                			           h.num,
                			           h.pic,
                			           h.isok
                			        FROM
                			       jono.weight h
                			       where h.isok=0
                		};
                		List<Weight> weightList = processItert(weightIter);
                		weightIter.close();
                		closeDefaultContext(myCtx);
                		return weightList;
                	}

                	private List<Weight> processItert(WeightIter weightIter)
                    			throws SQLException {
                    		List<Weight> weightList = new ArrayList<Weight>();
                    		while(weightIter.next()) {
                    			Weight weight = new Weight();
                    			weight.setMyid(weightIter.myid());
                    	        weight.setNum(weightIter.num());
                    	        weight.setPic(weightIter.pic());
                    	        weight.setIsok(weightIter.isok());
                    		    weightList.add(weight);
                    		}
                    		return weightList;
                    	}





        	public List<Store> selectStore()
                			throws NoPrivilegeException,SQLException,NoConnection {
                		DefaultContext myCtx = getDefaultContext();
                		StoreIter storeIter = null;
                		#sql [myCtx] storeIter = {
                			        SELECT
                			           h.storeid,
                			           h.status
                			        FROM
                			       jono.stores h
                		};
                		List<Store> storeList = processIters(storeIter);
                		//storeList.close();
                		closeDefaultContext(myCtx);
                		return storeList;
                	}


            private List<Store> processIters(StoreIter storeIter)
        			throws SQLException {
        		List<Store> storeList = new ArrayList<Store>();
        		while(storeIter.next()) {
        			 Store store = new Store();
                     store.setStoreid(storeIter.storeid());
                     store.setStatus(storeIter.status());
        		    storeList.add(store);
        		}
        		return storeList;
        	}




	public int updateByWorkId(String myid,Integer isok)
			throws NoPrivilegeException, SQLException, NoConnection {
		DefaultContext myCtx = getDefaultContext();

		#sql [myCtx] {
			UPDATE
				jono.weight
		    SET
		         isok =:isok
		    WHERE
		        myid =:myid
		};
		closeDefaultContext(myCtx);

		return 1;
	}


	public int updateEntity(Weight weight)
    			throws NoPrivilegeException, SQLException, NoConnection {
    		DefaultContext myCtx = getDefaultContext();
    		String myid=weight.getMyid();
    		#sql [myCtx] {
                       UPDATE
                       jono.weight
                       SET
                          isok= 0
                       WHERE
                           myid= :myid
                        };
    		closeDefaultContext(myCtx);

    		return 1;
    }

	public int updateStatus(Weight weight)
			throws NoPrivilegeException, SQLException, NoConnection {
		DefaultContext myCtx = getDefaultContext();

		String myid=weight.getMyid();

		#sql [myCtx] {
                   UPDATE
                   jono.weight
                   SET
                      isok= 1
                   WHERE
                       myid= :myid
                    };
		closeDefaultContext(myCtx);

		return 1;
	}


}
